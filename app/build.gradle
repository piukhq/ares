plugins {
    id("com.android.application")
    id("kotlin-android")
    id("kotlin-kapt")
    id("androidx.navigation.safeargs.kotlin")
    id("com.google.gms.google-services")
    id("io.sentry.android.gradle")
    id("kotlin-parcelize")

}

repositories {
    maven { url 'https://zendesk.jfrog.io/zendesk/repo' }
}

def rawBuildNumber = System.getenv("BITRISE_BUILD_NUMBER") ?: "20020897"
def buildNumber = Integer.parseInt(rawBuildNumber)
android {
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
        }
    }

    lintOptions {
        lintConfig file("lint.xml")
    }

    testOptions {
        unitTests.includeAndroidResources = true
    }

    compileSdkVersion 30
    signingConfigs {
        binkSigningConfig {
            storeFile file('bink-keystore.jks')
            if (System.getenv("BITRISEIO_ANDROID_KEYSTORE_ALIAS")) {
                keyAlias System.getenv("BITRISEIO_ANDROID_KEYSTORE_ALIAS")
                keyPassword System.getenv("BITRISEIO_ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD")
                storePassword System.getenv("BITRISEIO_ANDROID_KEYSTORE_PASSWORD")
            } else if (System.getenv("BINK_KEYSTORE_PASSWORD")) {
                storePassword = System.getenv("BINK_KEYSTORE_PASSWORD")
                keyPassword = System.getenv("BINK_KEYSTORE_PASSWORD")
                keyAlias = System.getenv("BINK_KEYSTORE_ALIAS")
            }
        }
    }
    defaultConfig {
        applicationId "com.bink.wallet"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode buildNumber
        versionName "2.3.5"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "Bink_${android.defaultConfig.versionName}_${variant.buildType.name}.apk"
                }
            }
        }
        debug {
//            signingConfig signingConfigs.binkSigningConfig
            applicationIdSuffix ".debug"
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "Bink_${android.defaultConfig.versionName}_${variant.buildType.name}.apk"
                }
            }
        }
//        qa {
//            resValue "string", "app_name", "Bink"
//            debuggable false
//            minifyEnabled true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            android.applicationVariants.all { variant ->
//                variant.outputs.all {
//                    outputFileName = "Bink_${android.defaultConfig.versionName}_${variant.buildType.name}.apk"
//                }
//            }
//        }
        beta {
            debuggable true
            applicationIdSuffix ".beta"
            signingConfig signingConfigs.binkSigningConfig
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "Bink_${android.defaultConfig.versionName}_${variant.buildType.name}.apk"
                }
            }
            ext.betaDistributionReleaseNotesFilePath = "app/beta_release_notes.txt"
            ext.betaDistributionGroupAliases = "internal-testing"
            ext.betaDistributionNotifications = true
        }
        gamma {
            applicationIdSuffix ".gamma"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "Bink_${android.defaultConfig.versionName}_${variant.buildType.name}.apk"
                }
            }
        }
        external {
            applicationIdSuffix ".external"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "Bink_${android.defaultConfig.versionName}_${variant.buildType.name}.apk"
                }
            }
        }
        mr {
            debuggable true
            applicationIdSuffix ".mr"
            signingConfig signingConfigs.binkSigningConfig
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "Bink_${android.defaultConfig.versionName}_${variant.buildType.name}.apk"
                }
            }
        }
        nightly {
            debuggable true
            applicationIdSuffix ".nightly"
            signingConfig signingConfigs.binkSigningConfig
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "Bink_${android.defaultConfig.versionName}_${variant.buildType.name}.apk"
                }
            }
        }
    }

    compileOptions {
        setTargetCompatibility(1.8)
        setSourceCompatibility(1.8)
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    buildFeatures {
        dataBinding true
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
        kotlinCompilerVersion '1.5.10'
    }
    ndkVersion '21.3.6528147'
    
    repositories {
        mavenCentral()
        maven {
            url "https://raw.github.com/embarkmobile/zxing-android-minimal/mvn-repo/maven-repository/"
        }
    }
}
kapt {
    correctErrorTypes = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    kapt("androidx.lifecycle:lifecycle-compiler:2.3.1")
    kapt("com.github.bumptech.glide:compiler:4.9.0")

    // common
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.4.31"
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation 'androidx.cardview:cardview:1.0.0'
//    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.4.31'

    implementation "androidx.security:security-crypto:1.1.0-alpha01"

    // ViewModel & LiveData
    implementation("androidx.lifecycle:lifecycle-extensions:2.2.0")
    implementation("androidx.lifecycle:lifecycle-common-java8:2.3.0")

    // coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.3'

    // navigation
    implementation("androidx.navigation:navigation-runtime-ktx:2.3.4")
    implementation("androidx.navigation:navigation-fragment-ktx:2.3.4")
    implementation("androidx.navigation:navigation-ui-ktx:2.3.4")

    // retrofi & moshi
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation("com.squareup.okhttp3:logging-interceptor:3.14.2")
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    kapt("com.squareup.moshi:moshi-kotlin-codegen:1.12.0")
    implementation("com.squareup.moshi:moshi-kotlin:1.12.0")

    // glide
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'

    // koin
    implementation "io.insert-koin:koin-androidx-viewmodel:2.0.1"
    implementation "io.insert-koin:koin-androidx-ext:2.0.1"

    //zxing
    implementation 'com.google.zxing:core:3.3.3'
    implementation 'com.journeyapps:zxing-android-embedded:4.2.0'

    //room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation 'com.google.code.gson:gson:2.8.6'

    implementation 'com.scottyab:rootbeer-lib:0.0.8'
    implementation 'com.romandanylyk:pageindicatorview:1.0.3'

    api "org.bouncycastle:bcprov-jdk15on:$bouncyCastleVersion"

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.hamcrest:hamcrest-library:1.3'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation 'androidx.test:core:1.3.0'
    testImplementation 'androidx.test:core:1.3.0'
    testImplementation 'org.mockito:mockito-inline:2.25.1'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.0-RC'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0'
    testImplementation group: 'androidx.arch.core', name: 'core-testing', version: '2.1.0'
    testImplementation 'org.koin:koin-test:2.0.1'
    testImplementation 'com.xfinity:resourceprovider-library:1.2.1'
    testImplementation('com.nhaarman:mockito-kotlin:1.4.0',
            {
                exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
                exclude group: 'org.jetbrains.kotlin', module: 'kotlin-reflect'
            })


    // add the Firebase SDK for Google Analytics
    implementation platform('com.google.firebase:firebase-bom:26.8.0')
    implementation 'com.google.firebase:firebase-config-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    implementation 'com.auth0.android:jwtdecode:2.0.0'

    /** ZENDESK **/
    implementation group: 'com.zendesk', name: 'support', version: '5.0.0'

    /** TESTING **/
    testImplementation "org.robolectric:robolectric:4.5.1"

    /** BARCODE SCANNING **/
    implementation 'com.github.greptastic:zxingscannerview:1.9.13.j'

    /** PAYMENT CARD SCANNING **/
    implementation 'com.getbouncer:cardscan-ui:2.1.0004'
    implementation 'org.tensorflow:tensorflow-lite:2.5.0'



    /** FLEXBOX LAYOUT **/
    implementation 'com.google.android.flexbox:flexbox:3.0.0'

    /** SENTRY **/
    implementation 'io.sentry:sentry-android:5.0.1'

//    /** LEAK CANARY**/
//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.4'

    /** In-app Review **/
    implementation 'com.google.android.play:core:1.8.3'
    implementation 'com.google.android.play:core-ktx:1.8.1'

    /**Compose**/
    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.0-beta01'

}
